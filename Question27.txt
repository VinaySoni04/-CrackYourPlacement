class Solution {
    public int largestRectangleArea(int[] heights) {
        int []lh=new int[heights.length];
        int []rh=new int[heights.length];
        int []width=new int[heights.length];
        Stack<Integer> stack=new Stack<>();
        for(int i=0;i<heights.length;i++)
        {
            while(!stack.isEmpty() && heights[i]<=heights[stack.peek()])
            {
                stack.pop();
            }
            if(stack.isEmpty())
            {
                lh[i]=-1;
            }
            else
            {
                lh[i]=stack.peek();
            }
            stack.add(i);
        }
        stack.clear();
        
        for(int i=heights.length-1;i>=0;i--)
        {
            while(!stack.isEmpty() && heights[i]<=heights[stack.peek()])
            {
                stack.pop();
            }
            if(stack.isEmpty())
            {
                rh[i]=heights.length;
            }
            else
            {
                rh[i]=stack.peek();
            }
            stack.add(i);
        }
        int area=0;
        for(int i=0;i<heights.length;i++)
        {
            width[i]=rh[i]-lh[i]-1;
            area=Math.max(area,heights[i]*width[i]);
        }
        return area;
    }
}